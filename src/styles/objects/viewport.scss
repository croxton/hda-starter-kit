/* ============================================================================
   OBJECTS -> VIEWPORT
   ========================================================================= */

/*!
 * Viewport
 * @description creates a container filling the height of the viewport, optionally accounting for a fixed header
 * Custom property --windowHeight is set in JS, preventing subsequent resize on vertical scroll on iOS (due to address bar hiding)
 * @author Mark Croxton @croxton
 */

:root {
  --vh-span: 1;
  --vh-offset: 0px; // fixed navbar on small screens
}

.o-viewport {
  --windowWidth: 100vw;
  min-height: var(--vh-min, calc(var(--windowHeight, 100vh) * var(--vh-span) - var(--vh-offset))); // remove navbar

  @screen md {
    min-height: var(--vh-min, calc(var(--windowHeight, 100vh) * var(--vh-span)));
  }
}

@layer utilities {
  .o-viewport-full {
    --vh-span: 1;
    --vh-min: unset;
  }

  .o-viewport-16\/9 {
    --vh-min: calc(var(--windowWidth, 100vw) * 9 / 16);
  }

  .o-viewport-golden {
    --vh-min: calc(var(--windowWidth, 100vw) * 1 / 1.61803398875);
  }

  .o-viewport-3\/1 {
    --vh-min: calc(var(--windowWidth, 100vw) * 1 / 3);
  }

  .o-viewport-4\/1 {
    --vh-min: calc(var(--windowWidth, 100vw) * 1 / 4);
  }

  .o-viewport-5\/1 {
    --vh-min: calc(var(--windowWidth, 100vw) * 1 / 5);
  }

  .o-viewport-vh-4\/1 {
    --vh-min: calc(var(--windowHeight, 100vh) * 1 / 4);
  }

  .o-viewport-none {
    --vh-span: 0;
    --vh-min: unset;
  }
}
